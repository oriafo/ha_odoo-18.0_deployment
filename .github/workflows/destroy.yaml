name: odoo Infrastructure destroy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to Destroy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
                
permissions:
  contents: read
  id-token: write
  
jobs:
  Infra_destruction:
    runs-on: ubuntu-latest
    environment: ${{github.event.inputs.environment}} 
    defaults:
      run:
        shell: bash
        working-directory: ./infra/file-structure/${{github.event.inputs.environment}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: echo the current branch
        run:  |
          echo "Current branch is: ${{github.event.inputs.environment}}"

   
      - name: Configure AWS Credentials for Development Environment
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'
          
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init


      # Checks that all Terraform configuration files adhere to a canonical format
      # - name: Terraform Format
      #   run: terraform fmt -check

      # Generates an execution plan for Terraform
      # - name: Terraform Plan -destroy
      #   run: terraform plan -var "environment_name=${{github.event.inputs.environmenth}}" -out=plan.tfplan 

      # Destroy the Configuration
      - name: Terraform Destroy 
        run: |
          # terraform force-unlock -force 9af71153-ceff-c230-32f2-9a51ca73bc9d
          #terraform destroy -var "environment_name=${{github.event.inputs.environment}}" -var "REPOSITORY=oriafo/ha_odoo-18.0_deployment" -var "REGISTRY=${{ steps.login-ecr.outputs.registry }}"  -var "run_number=${{ github.run_number }}" -var "access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" -var "secret_aws_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -auto-approve
          terraform destroy -var "environment_name=${{github.event.inputs.environment}}" -var "access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" -var "secret_aws_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -auto-approve


      # # Apply the Configuration
      # - name: cfn Destroy
      #   if: ${{github.head_ref}} == 'dev'
      #   run: aws cloudformation delete-stack --stack-name odoo-backend-${{github.head_ref}} --profile dikodin_profile --region us-east-1

      # - name: cfn Destroy
      #   if: ${{github.head_ref}} == 'staging'
      #   run: aws cloudformation delete-stack --stack-name odoo-backend-${{github.event.inputs.branch}} --profile dikodin_production --region us-east-1
